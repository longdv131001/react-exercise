{"ast":null,"code":"var _jsxFileName = \"E:\\\\React\\\\react-ex\\\\src\\\\components\\\\Heroes\\\\Heroes.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from 'axios';\nimport './Heroes.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Heroes = () => {\n  _s();\n\n  const [heroes, setHeroes] = useState([]);\n  const [selectedHero, setSelectedHero] = useState({\n    id: '',\n    name: ''\n  });\n  const [isLoading, setIsLoading] = useState(true);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [historySelect, setHistorySelect] = useState([]);\n\n  const historyHandleOnClick = event => {\n    setHistorySelect([]);\n  };\n\n  const onClickHandler = (event, value) => {\n    setSelectedHero(value);\n    setHistorySelect(value);\n    console.log(historySelect);\n  };\n\n  const onChangeHandler = (event, value) => {\n    const heroListClone = [...heroes];\n    heroListClone.find(items => items.id === selectedHero.id).name = value;\n    setSelectedHero(heroListClone);\n  };\n\n  useEffect(() => {\n    let didCancel = false;\n    setIsLoading(true);\n    axios({\n      method: 'GET',\n      url: 'https://60dff0ba6b689e001788c858.mockapi.io/heroes'\n    }).then(response => {\n      if (!didCancel) {\n        setIsLoading(false);\n        setHeroes(response.data);\n      }\n    }).catch(error => {\n      if (!didCancel) {\n        setIsLoading(false);\n        setErrorMessage(error.message);\n      }\n    });\n    return () => {\n      didCancel = true;\n    };\n  }, []);\n\n  if (isLoading === true) {\n    return 'Loading';\n  }\n\n  if (errorMessage) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 32\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [heroes.map((value, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        class: \"heroes\",\n        onClick: event => onClickHandler(event, value, index),\n        children: /*#__PURE__*/_jsxDEV(\"li\", {\n          style: {\n            backgroundColor: heroes.id === value.id ? 'black' : 'gray'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            class: \"badge\",\n            children: value.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 29\n          }, this), \" \", value.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 25\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(\"form\", {\n      autoComplete: \"off\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [selectedHero.name.toLocaleUpperCase(), \" Details\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"id: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 22\n        }, this), selectedHero.id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"hero-name\",\n          children: \"Hero name: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          class: \"input\",\n          id: \"hero-name\",\n          placeholder: \"name\",\n          value: selectedHero.name,\n          onChange: event => onChangeHandler(event)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          color: '#A80000'\n        },\n        children: \"Messages\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        class: \"clear\",\n        children: \"Clear messages\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), historySelect.map(item => /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"HeroesComponent: Selected hero id=\", item.id]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 45\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Heroes, \"EY+jqN15wMaNRcLRxsvHJ8CNkOQ=\");\n\n_c = Heroes;\nexport default Heroes;\n\nvar _c;\n\n$RefreshReg$(_c, \"Heroes\");","map":{"version":3,"sources":["E:/React/react-ex/src/components/Heroes/Heroes.js"],"names":["React","useEffect","useState","axios","Heroes","heroes","setHeroes","selectedHero","setSelectedHero","id","name","isLoading","setIsLoading","errorMessage","setErrorMessage","historySelect","setHistorySelect","historyHandleOnClick","event","onClickHandler","value","console","log","onChangeHandler","heroListClone","find","items","didCancel","method","url","then","response","data","catch","error","message","map","index","backgroundColor","toLocaleUpperCase","color","item"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from 'axios';\r\nimport './Heroes.css';\r\n\r\nconst Heroes = () => {\r\n    const [heroes, setHeroes] = useState([]);\r\n    const [selectedHero, setSelectedHero] = useState({ id: '', name: '' });\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n    const [historySelect, setHistorySelect] = useState([]);\r\n\r\n    const historyHandleOnClick = (event) => {\r\n        setHistorySelect([]);\r\n    };\r\n    const onClickHandler =(event, value) => {\r\n        setSelectedHero(value);\r\n        setHistorySelect(value);\r\n        console.log(historySelect);\r\n\r\n    }\r\n    const onChangeHandler = (event,value) => {\r\n        const heroListClone = [...heroes];\r\n        heroListClone.find(items => items.id === selectedHero.id).name = value ;\r\n        setSelectedHero(heroListClone);\r\n    }\r\n   \r\n    useEffect(() => {\r\n        let didCancel = false;\r\n        setIsLoading(true);\r\n        axios({\r\n            method: 'GET',\r\n            url: 'https://60dff0ba6b689e001788c858.mockapi.io/heroes'\r\n        }).then(response => {\r\n            if (!didCancel) {\r\n                setIsLoading(false);\r\n                setHeroes(response.data);\r\n            }\r\n\r\n        }).catch(error => {\r\n            if (!didCancel) {\r\n                setIsLoading(false);\r\n                setErrorMessage(error.message);\r\n            }\r\n\r\n        })\r\n        return () => {\r\n            didCancel = true;\r\n        }\r\n\r\n    }, []);\r\n\r\n    if (isLoading === true) { return 'Loading' }\r\n    if (errorMessage) { return <div>{errorMessage}</div> }\r\n\r\n    return (\r\n        <div>\r\n            {heroes.map((value, index) => (\r\n                <div>\r\n                    <ul class=\"heroes\" onClick={(event) => onClickHandler(event, value ,index)} key={index}>\r\n                        <li style={{ backgroundColor: heroes.id  === value.id? 'black' : 'gray' }}\r\n\r\n                        >\r\n                            <span class=\"badge\">{value.id}</span> {value.name}\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            ))}\r\n            <form autoComplete=\"off\">\r\n                <h2>{selectedHero.name.toLocaleUpperCase()} Details</h2>\r\n                <div><span>id: </span>{selectedHero.id}</div>\r\n                <div>\r\n                    <label for=\"hero-name\">Hero name: </label>\r\n                    <input class=\"input\" id=\"hero-name\" placeholder=\"name\" value={selectedHero.name} onChange={(event) =>onChangeHandler(event)}/>\r\n                </div>\r\n            </form>\r\n            <div>\r\n                <h2 style={{color: '#A80000'}}>Messages</h2>\r\n                <button class=\"clear\" >Clear messages</button>\r\n                {historySelect.map(item => (<span key={item.id}>HeroesComponent: Selected hero id={item.id}</span>))}\r\n            </div>\r\n\r\n\r\n\r\n        </div >\r\n\r\n    )\r\n};\r\nexport default Heroes;"]},"metadata":{},"sourceType":"module"}