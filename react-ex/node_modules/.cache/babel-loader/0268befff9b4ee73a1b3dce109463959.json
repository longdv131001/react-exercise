{"ast":null,"code":"var _jsxFileName = \"E:\\\\React\\\\react-ex\\\\src\\\\components\\\\Heroes\\\\Heroes.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from 'axios';\nimport './Heroes.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Heroes = () => {\n  _s();\n\n  const [heroes, setHeroes] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const handleOnclick = event => {\n    console.log(heroes.id);\n  };\n\n  useEffect(() => {\n    let didCancel = false;\n    setIsLoading(true);\n    axios({\n      method: 'GET',\n      url: 'https://60dff0ba6b689e001788c858.mockapi.io/heroes'\n    }).then(response => {\n      if (!didCancel) {\n        setIsLoading(false);\n        setHeroes(response.data);\n      }\n    }).catch(error => {\n      if (!didCancel) {\n        setIsLoading(false);\n        setErrorMessage(error.message);\n      }\n    });\n    return () => {\n      didCancel = true;\n    };\n  }, []);\n\n  if (isLoading === true) {\n    return 'Loading';\n  }\n\n  if (errorMessage) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 32\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: heroes.map(items => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        class: \"heroes\",\n        children: /*#__PURE__*/_jsxDEV(\"li\", {\n          style: {\n            backgroundColor: items.id === heroes.id ? 'black' : 'gray'\n          },\n          onClick: handleOnclick,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            class: \"badge\",\n            children: items.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 29\n          }, this), \" \", items.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Heroes, \"gf1SbYcaU5Alb4frlDpQNeoDLj4=\");\n\n_c = Heroes;\nexport default Heroes;\n\nvar _c;\n\n$RefreshReg$(_c, \"Heroes\");","map":{"version":3,"sources":["E:/React/react-ex/src/components/Heroes/Heroes.js"],"names":["React","useEffect","useState","axios","Heroes","heroes","setHeroes","isLoading","setIsLoading","errorMessage","setErrorMessage","handleOnclick","event","console","log","id","didCancel","method","url","then","response","data","catch","error","message","map","items","backgroundColor","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,cAAP;;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACjB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACO,YAAD,EAAeC,eAAf,IAAkCR,QAAQ,CAAC,EAAD,CAAhD;;AAEA,QAAMS,aAAa,GAAIC,KAAD,IAAW;AAC9BC,IAAAA,OAAO,CAACC,GAAR,CAAYT,MAAM,CAACU,EAAnB;AAEF,GAHD;;AAIAd,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIe,SAAS,GAAG,KAAhB;AACAR,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAL,IAAAA,KAAK,CAAC;AACFc,MAAAA,MAAM,EAAE,KADN;AAEFC,MAAAA,GAAG,EAAE;AAFH,KAAD,CAAL,CAGGC,IAHH,CAGQC,QAAQ,IAAI;AAChB,UAAI,CAACJ,SAAL,EAAgB;AACZR,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACAF,QAAAA,SAAS,CAACc,QAAQ,CAACC,IAAV,CAAT;AACH;AAEJ,KATD,EASGC,KATH,CASSC,KAAK,IAAI;AACd,UAAI,CAACP,SAAL,EAAgB;AACZR,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACAE,QAAAA,eAAe,CAACa,KAAK,CAACC,OAAP,CAAf;AACH;AAEJ,KAfD;AAgBA,WAAO,MAAM;AACTR,MAAAA,SAAS,GAAG,IAAZ;AACH,KAFD;AAIH,GAvBQ,EAuBN,EAvBM,CAAT;;AAyBA,MAAIT,SAAS,KAAK,IAAlB,EAAwB;AAAE,WAAO,SAAP;AAAkB;;AAC5C,MAAIE,YAAJ,EAAkB;AAAE,wBAAO;AAAA,gBAAMA;AAAN;AAAA;AAAA;AAAA;AAAA,YAAP;AAAkC;;AAEtD,sBACI;AAAA,cACKJ,MAAM,CAACoB,GAAP,CAAWC,KAAK,iBACb;AAAA,6BACI;AAAI,QAAA,KAAK,EAAC,QAAV;AAAA,+BACI;AAAI,UAAA,KAAK,EAAE;AAAEC,YAAAA,eAAe,EAAED,KAAK,CAACX,EAAN,KAAaV,MAAM,CAACU,EAApB,GAAyB,OAAzB,GAAmC;AAAtD,WAAX;AAA2E,UAAA,OAAO,EAAEJ,aAApF;AAAA,kCACI;AAAM,YAAA,KAAK,EAAC,OAAZ;AAAA,sBAAqBe,KAAK,CAACX;AAA3B;AAAA;AAAA;AAAA;AAAA,kBADJ,OAC2CW,KAAK,CAACE,IADjD;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADH;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AA0BH,CA/DD;;GAAMxB,M;;KAAAA,M;AAgEN,eAAeA,MAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from 'axios';\r\nimport './Heroes.css';\r\n\r\nconst Heroes = () => {\r\n    const [heroes, setHeroes] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n\r\n    const handleOnclick = (event) => {\r\n       console.log(heroes.id);\r\n\r\n    }\r\n    useEffect(() => {\r\n        let didCancel = false;\r\n        setIsLoading(true);\r\n        axios({\r\n            method: 'GET',\r\n            url: 'https://60dff0ba6b689e001788c858.mockapi.io/heroes'\r\n        }).then(response => {\r\n            if (!didCancel) {\r\n                setIsLoading(false);\r\n                setHeroes(response.data);\r\n            }\r\n\r\n        }).catch(error => {\r\n            if (!didCancel) {\r\n                setIsLoading(false);\r\n                setErrorMessage(error.message);\r\n            }\r\n\r\n        })\r\n        return () => {\r\n            didCancel = true;\r\n        }\r\n\r\n    }, []);\r\n\r\n    if (isLoading === true) { return 'Loading' }\r\n    if (errorMessage) { return <div>{errorMessage}</div> }\r\n\r\n    return (\r\n        <div>\r\n            {heroes.map(items => (\r\n                <div>\r\n                    <ul class=\"heroes\">\r\n                        <li style={{ backgroundColor: items.id === heroes.id ? 'black' : 'gray' }} onClick={handleOnclick}>\r\n                            <span class=\"badge\">{items.id}</span> {items.name}\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            ))}\r\n\r\n            {/* {heroes.find(hero => (\r\n                <div >\r\n                    <h2>{hero.name} Details</h2>\r\n                    <div><span>id: </span>{hero.id}</div>\r\n                    <div>\r\n                        <label for=\"hero-name\">Hero name: </label>\r\n                        <input id=\"hero-name\" placeholder=\"name\" />\r\n                    </div>\r\n                </div>\r\n            ))} */}\r\n\r\n        </div >\r\n\r\n    )\r\n};\r\nexport default Heroes;"]},"metadata":{},"sourceType":"module"}