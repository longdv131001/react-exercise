{"ast":null,"code":"var _jsxFileName = \"E:\\\\React\\\\react-ex\\\\src\\\\components\\\\Heroes\\\\Heroes.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from 'axios';\nimport './Heroes.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Heroes = () => {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(true);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [selectedHero, setSelectedHero] = useState({\n    id: '',\n    name: ''\n  });\n  useEffect(() => {\n    let didCancel = false;\n    setIsLoading(true);\n    axios({\n      method: 'GET',\n      url: 'https://60dff0ba6b689e001788c858.mockapi.io/heroes'\n    }).then(response => {\n      if (!didCancel) {\n        setIsLoading(false);\n        const {\n          data\n        } = response;\n        console.log(data);\n        setSelectedHero(data);\n      }\n    }).catch(error => {\n      if (!didCancel) {\n        setIsLoading(false);\n        setErrorMessage(error.message);\n      }\n    });\n    return () => {\n      didCancel = true;\n    };\n  }, []);\n\n  if (isLoading === true) {\n    return 'Loading';\n  }\n\n  if (errorMessage) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 32\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Tour of Heroes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"My Heroes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), selectedHero.map(heroes => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        class: \"heroes\",\n        children: /*#__PURE__*/_jsxDEV(\"li\", {\n          style: {\n            backgroundColor: heroes.id === selectedHero.id ? 'black' : 'gray'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            class: \"badge\",\n            children: heroes.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 29\n          }, this), \" \", heroes.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Heroes, \"q8968OUxxWkAtVhCFd6/pVUeRSc=\");\n\n_c = Heroes;\nexport default Heroes;\n\nvar _c;\n\n$RefreshReg$(_c, \"Heroes\");","map":{"version":3,"sources":["E:/React/react-ex/src/components/Heroes/Heroes.js"],"names":["React","useEffect","useState","axios","Heroes","isLoading","setIsLoading","errorMessage","setErrorMessage","selectedHero","setSelectedHero","id","name","didCancel","method","url","then","response","data","console","log","catch","error","message","map","heroes","backgroundColor"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,cAAP;;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACjB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BJ,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACK,YAAD,EAAeC,eAAf,IAAkCN,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACO,YAAD,EAAeC,eAAf,IAAkCR,QAAQ,CAAC;AAACS,IAAAA,EAAE,EAAE,EAAL;AAASC,IAAAA,IAAI,EAAE;AAAf,GAAD,CAAhD;AACAX,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIY,SAAS,GAAG,KAAhB;AACAP,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAH,IAAAA,KAAK,CAAC;AACFW,MAAAA,MAAM,EAAE,KADN;AAEFC,MAAAA,GAAG,EAAE;AAFH,KAAD,CAAL,CAGGC,IAHH,CAGQC,QAAQ,IAAI;AAChB,UAAI,CAACJ,SAAL,EAAgB;AACZP,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACA,cAAM;AAAEY,UAAAA;AAAF,YAAWD,QAAjB;AACAE,QAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAR,QAAAA,eAAe,CAACQ,IAAD,CAAf;AACH;AAEJ,KAXD,EAWGG,KAXH,CAWSC,KAAK,IAAI;AACd,UAAI,CAACT,SAAL,EAAgB;AACZP,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACAE,QAAAA,eAAe,CAACc,KAAK,CAACC,OAAP,CAAf;AACH;AAEJ,KAjBD;AAkBA,WAAO,MAAM;AACTV,MAAAA,SAAS,GAAG,IAAZ;AACH,KAFD;AAIH,GAzBQ,EAyBN,EAzBM,CAAT;;AA2BA,MAAIR,SAAS,KAAK,IAAlB,EAAwB;AAAE,WAAO,SAAP;AAAkB;;AAC5C,MAAIE,YAAJ,EAAkB;AAAE,wBAAO;AAAA,gBAAMA;AAAN;AAAA;AAAA;AAAA;AAAA,YAAP;AAAkC;;AAEtD,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,EAGKE,YAAY,CAACe,GAAb,CAAiBC,MAAM,iBACpB;AAAA,6BACI;AAAI,QAAA,KAAK,EAAC,QAAV;AAAA,+BACI;AAAI,UAAA,KAAK,EAAE;AAACC,YAAAA,eAAe,EAAED,MAAM,CAACd,EAAP,KAAcF,YAAY,CAACE,EAA3B,GAAgC,OAAhC,GAA0C;AAA5D,WAAX;AAAA,kCACI;AAAM,YAAA,KAAK,EAAC,OAAZ;AAAA,sBAAqBc,MAAM,CAACd;AAA5B;AAAA;AAAA;AAAA;AAAA,kBADJ,OAC4Cc,MAAM,CAACb,IADnD;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADH,CAHL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH,CAhDD;;GAAMR,M;;KAAAA,M;AAiDN,eAAeA,MAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from 'axios';\r\nimport './Heroes.css';\r\n\r\nconst Heroes = () => {\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n    const [selectedHero, setSelectedHero] = useState({id: '', name: ''});\r\n    useEffect(() => {\r\n        let didCancel = false;\r\n        setIsLoading(true);\r\n        axios({\r\n            method: 'GET',\r\n            url: 'https://60dff0ba6b689e001788c858.mockapi.io/heroes'\r\n        }).then(response => {\r\n            if (!didCancel) {\r\n                setIsLoading(false);\r\n                const { data } = response;\r\n                console.log(data);\r\n                setSelectedHero(data);\r\n            }\r\n\r\n        }).catch(error => {\r\n            if (!didCancel) {\r\n                setIsLoading(false);\r\n                setErrorMessage(error.message);\r\n            }\r\n\r\n        })\r\n        return () => {\r\n            didCancel = true;\r\n        }\r\n\r\n    }, []);\r\n\r\n    if (isLoading === true) { return 'Loading' }\r\n    if (errorMessage) { return <div>{errorMessage}</div> }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Tour of Heroes</h1>\r\n            <h2>My Heroes</h2>\r\n            {selectedHero.map(heroes => (\r\n                <div    >\r\n                    <ul class=\"heroes\">\r\n                        <li style={{backgroundColor: heroes.id === selectedHero.id ? 'black' : 'gray' }}>\r\n                            <span class=\"badge\">{heroes.id}</span> {heroes.name}\r\n                        </li>\r\n                    </ul></div>\r\n\r\n            ))}</div>\r\n    )\r\n};\r\nexport default Heroes;"]},"metadata":{},"sourceType":"module"}